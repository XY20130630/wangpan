(defun oi-draw-graph (beg end region)
  "Draw a graph through graphviz
Directed graph is default;
To draw undirected graph, add C-u prefix"
  (interactive (list (mark) (point)
					 (prefix-numeric-value current-prefix-arg)))
  (let ((edge-expr (if current-prefix-arg " --" " ->"))
		(graph-type (if current-prefix-arg "graph" "digraph")))
    (copy-region-as-kill beg end region)
    (with-temp-file "~/temp_graph.dot"
      (yank)
      (flush-lines "^[[:space:]]*$" (point-min) (point-max) t)
      (replace-regexp "[ \t]+$" "" nil (point-min) (point-max))
      (replace-regexp "^[ \t]+" "" nil (point-min) (point-max))
      (goto-char (point-min))
      (while (< (point) (point-max))
		(move-beginning-of-line 1)
		(insert "\"")
		(forward-word)
		(insert "\"")
		(insert edge-expr)
		(forward-word)
		(backward-word)
		(insert "\"")
		(forward-word)
		(insert "\" [label=\"")
		(move-end-of-line 1)
		(insert "\"];")
		(forward-line))
      (goto-char (point-min))
      (open-line 2)
      (insert (concat graph-type " tmp {"))
      (goto-char (point-max))
      (newline)
      (insert "}")))
  (shell-command "dot ~/temp_graph.dot -T png -o ~/temp_graph.png")
  (find-file "~/temp_graph.png"))
